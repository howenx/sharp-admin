<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.ProductsMapper">

    <!--enable mybatis default cache configure reference:
        https://mybatis.github.io/mybatis-3/zh/sqlmap-xml.html#cache
    -->
    <cache/>

    <resultMap type="entity.Products" id="prods">
        <id property="id" column="id" javaType="Long" jdbcType="BIGINT"/>
        <result property="merchId" column="merch_uid" javaType="Long" jdbcType="BIGINT"/>
        <result property="merchName" column="merch_nm" javaType="String" jdbcType="VARCHAR"/>
        <result property="language" column="lang" javaType="String" jdbcType="VARCHAR"/>
        <result property="cateId" column="cate_id" javaType="Long" jdbcType="BIGINT"/>
        <result property="cateName" column="cate_nm" javaType="String" jdbcType="VARCHAR"/>
        <result property="brandId" column="brand_id" javaType="Long" jdbcType="BIGINT"/>
        <result property="brandName" column="brand_nm" javaType="String" jdbcType="VARCHAR"/>
        <result property="productName" column="prod_nm" javaType="String" jdbcType="VARCHAR"/>
        <result property="productColor" column="prod_color" javaType="String" jdbcType="VARCHAR"/>
        <result property="productSize" column="prod_size" javaType="String" jdbcType="VARCHAR"/>
        <result property="productDesc" column="prod_desc" javaType="String" jdbcType="VARCHAR"/>
        <result property="storeArea" column="store_area" javaType="String" jdbcType="VARCHAR"/>
        <result property="sourceArea" column="src_area" javaType="String" jdbcType="VARCHAR"/>
        <result property="sellOnDate" column="sell_on_at" javaType="java.sql.Timestamp" jdbcType="TIMESTAMP"/>
        <result property="sellOffDate" column="sell_off_at" javaType="java.sql.Timestamp" jdbcType="TIMESTAMP"/>
        <result property="productAmount" column="prod_amount" javaType="Integer" jdbcType="INTEGER"/>
        <result property="productPrice" column="prod_price" javaType="BigDecimal" jdbcType="NUMERIC"/>
        <result property="recommendPrice" column="recommend_price" javaType="BigDecimal" jdbcType="NUMERIC"/>
        <result property="masterImg" column="prod_master_img" javaType="String" jdbcType="VARCHAR"/>
        <result property="previewImgs" column="prod_preview_imgs" javaType="String" jdbcType="VARCHAR"/>
        <result property="detailImgs" column="prod_detail_imgs" javaType="String" jdbcType="VARCHAR"/>
        <result property="features" column="prod_features" javaType="String" jdbcType="VARCHAR"/>
        <result property="productState" column="state" javaType="String" jdbcType="VARCHAR"/>
        <result property="destory" column="is_destory" javaType="boolean" jdbcType="BOOLEAN"/>
        <result property="destoryUid" column="destory_uid" javaType="Long" jdbcType="BIGINT"/>
        <result property="updateDate" column="update_at" javaType="java.sql.Timestamp" jdbcType="TIMESTAMP"/>
        <result property="updateUid" column="update_uid" javaType="Long" jdbcType="BIGINT"/>
        <result property="createDate" column="create_at" javaType="java.sql.Timestamp" jdbcType="TIMESTAMP"/>
        <result property="createUid" column="create_uid" javaType="Long" jdbcType="BIGINT"/>
    </resultMap>

    <sql id="productsColumns">
        ${alias}.id,
        ${alias}.merch_uid,
        ${alias}.merch_nm,
        ${alias}.lang,
        ${alias}.cate_id,
        ${alias}.cate_nm,
        ${alias}.brand_id,
        ${alias}.brand_nm,
        ${alias}.prod_nm,
        ${alias}.prod_color,
        ${alias}.prod_size,
        ${alias}.prod_desc,
        ${alias}.store_area,
        ${alias}.src_area,
        ${alias}.sell_on_at,
        ${alias}.sell_off_at,
        ${alias}.prod_amount,
        ${alias}.prod_price,
        ${alias}.recommend_price,
        ${alias}.prod_master_img,
        ${alias}.prod_preview_imgs,
        ${alias}.prod_detail_imgs,
        ${alias}.prod_features,
        ${alias}.state,
        ${alias}.is_destory,
        ${alias}.destory_uid,
        ${alias}.update_at,
        ${alias}.update_uid,
        ${alias}.create_at,
        ${alias}.create_uid
    </sql>

    <select id="getProducts" resultMap="prods" parameterType="java.lang.Long">
        select
        <include refid="productsColumns">
            <property name="alias" value="t"/>
        </include>
        from prods t where id=${value}
    </select>

    <select id="getAllProducts" resultMap="prods" parameterType="entity.Products">
        select
        <include refid="productsColumns">
            <property name="alias" value="t"/>
        </include>
        from prods t where 1=1
        <if test="id != null">
            and t.id = #{id}
        </if>
        <if test='productName != null and productName != "null" and productName != "" '>
            and t.prod_nm  = #{productName}
        </if>
        <if test='sellOnDate != null'>
            and t.sell_on_at &gt;= #{sellOnDate} ::timestamp
        </if>
        <if test='sellOffDate != null'>
            and t.sell_off_at  &lt;= #{sellOffDate} ::timestamp
        </if>
        <if test="sort == null or sort == '' or sort == 'null' ">
            ORDER BY t.id DESC, t.prod_nm
        </if>

        <if test="sort != null and sort != '' and sort != 'null' ">
            ORDER BY t.${sort}
            <if test="order != null">
                ${order}
            </if>
        </if>
        <if test="pageSize == -1 and offset >= -1">
            LIMIT ALL OFFSET 0
        </if>
        <if test="pageSize >= 1 and offset >= 0">
            LIMIT #{pageSize} OFFSET #{offset}
        </if>
    </select>

    <insert id="insertProducts" parameterType="entity.Products" useGeneratedKeys="true" keyProperty="id" >
        insert into prods
        (merch_uid,merch_nm,lang,cate_id,cate_nm,brand_id,brand_nm,prod_nm,prod_color,prod_size,prod_desc,store_area,src_area,sell_on_at,sell_off_at,prod_amount,prod_price,recommend_price,prod_master_img,prod_preview_imgs,prod_detail_imgs,prod_features,state,is_destory,destory_uid,update_at,update_uid,create_at,create_uid)
        values
        (#{merchId},#{merchName},#{language},#{cateId},#{cateName},#{brandId},#{brandName},#{productName},#{productColor},#{productSize},#{productDesc},#{storeArea},#{sourceArea},#{sellOnDate},#{sellOffDate},#{productAmount},#{productPrice},#{recommendPrice},#{masterImg},#{previewImgs},#{detailImgs},#{features},#{productState},#{destory},#{destoryUid},#{updateDate},#{updateUid},CURRENT_TIMESTAMP(0),#{createUid})
    </insert>
</mapper>
