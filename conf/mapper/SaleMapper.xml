<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.SaleMapper">

    <!--enable mybatis default cache configure reference:
        https://mybatis.github.io/mybatis-3/zh/sqlmap-xml.html#cache
    -->
    <sql id="saleProductColumns">
        ${alias}.id,
        ${alias}.name,
        ${alias}.category_id,
        ${alias}.sku_code,
        ${alias}.product_code,
        ${alias}.spec,
        ${alias}.sale_count,
        ${alias}.inventory,
        ${alias}.product_cost,
        ${alias}.stock_value,
        ${alias}.purchase_count,
        ${alias}.no_card,
        ${alias}.damage,
        ${alias}.less_delivery,
        ${alias}.less_product,
        ${alias}.empty_box,
        ${alias}.create_at,
        ${alias}.update_at,
        ${alias}.inv_area,
        ${alias}.storage_at,
        ${alias}.custom_sku_id,
        ${alias}.damage_other,
        ${alias}.remark,
        ${alias}.create_user_id,
        ${alias}.update_user_id,
        ${alias}.back_count,
        ${alias}.jd_sku_id,
        ${alias}.sale_finish_status

    </sql>
    <!-- 录入一条销售产品信息 -->
    <insert id="insertSaleProduct" parameterType="domain.sale.SaleProduct" useGeneratedKeys="true" keyProperty="id">
        insert into sale_product
        (name,category_id,sku_code,product_code,spec,sale_count,inventory,product_cost,stock_value,purchase_count,
        no_card,damage,less_delivery,less_product,empty_box,create_at,update_at,inv_area,storage_at,custom_sku_id,damage_other,remark,create_user_id,update_user_id,back_count,jd_sku_id,sale_finish_status)
        values(
        #{name},
        #{categoryId},
        #{skuCode},
        #{productCode},
        #{spec},
        #{saleCount},
        #{inventory},
        #{productCost},
        #{stockValue},
        #{purchaseCount},
        #{noCard},
        #{damage},
        #{lessDelivery},
        #{lessProduct},
        #{emptyBox},
        CURRENT_TIMESTAMP(0),
        CURRENT_TIMESTAMP(0),
        #{invArea},
        #{storageAt},
        #{customSkuId},
        #{damageOther},
        #{remark},
        #{createUserId},
        #{updateUserId},
        #{backCount},
        #{jdSkuId},
        #{saleFinishStatus}
        )
    </insert>


    <update id="updateSaleProduct" parameterType="domain.sale.SaleProduct" >
        update sale_product set name= #{name},category_id= #{categoryId},sku_code= #{skuCode},product_code= #{productCode},
        spec= #{spec},sale_count=#{saleCount},inventory= #{inventory},product_cost= #{productCost},stock_value=#{stockValue},purchase_count= #{purchaseCount},
        no_card= #{noCard},damage=#{damage},less_delivery= #{lessDelivery},less_product=#{lessProduct},empty_box=#{emptyBox},update_at= CURRENT_TIMESTAMP(0),
        inv_area=#{invArea},storage_at=#{storageAt},custom_sku_id=#{customSkuId},damage_other=#{damageOther},remark=#{remark},
        update_user_id=#{updateUserId},back_count=#{backCount},jd_sku_id=#{jdSkuId},sale_finish_status=#{saleFinishStatus}
        where id=#{id}
    </update>
    <select id="getSaleProductById" parameterType="java.lang.Long"  resultType="domain.sale.SaleProduct">
        select
        <include refid="saleProductColumns">
            <property name="alias" value="t"/>
        </include>
        from sale_product t where 1=1 and t.id=#{value}
    </select>

    <select id="getSaleProduct" parameterType="domain.sale.SaleProduct" resultType="domain.sale.SaleProduct">
        select
        <include refid="saleProductColumns">
            <property name="alias" value="t"/>
        </include>
        from sale_product t where 1=1
        <if test="categoryId!=null and categoryId!=''">
            and t.category_id = #{categoryId}
        </if>
        <if test="jdSkuId!=null and jdSkuId!=''">
            and t.jd_sku_id like '%${jdSkuId}%'
        </if>
        <if test="sort == null or sort == ''">
            ORDER BY t.jd_sku_id,t.create_at DESC
        </if>

        <if test="sort != null">
            ORDER BY t.${sort}
            <if test="order != null">
                ${order}
            </if>
        </if>

    </select>

    <select id="getSaleProductPage" parameterType="domain.sale.SaleProduct" resultType="domain.sale.SaleProduct">
        select
        <include refid="saleProductColumns">
            <property name="alias" value="t"/>
        </include>
        from sale_product t where 1=1
        <if test="id != null">
            and t.id = #{id}
        </if>
        <if test="name != null and name!='' ">
            and t.name like '%${name}%'
        </if>
        <if test="jdSkuId!=null and jdSkuId!=''">
            and t.jd_sku_id like '%${jdSkuId}%'
        </if>
        <if test="starttime!=null and starttime!=''">
            and t.storage_at &gt;=#{starttime} ::timestamp
        </if>
        <if test="endtime!=null and endtime!=''">
            and t.storage_at &lt;=#{endtime} ::timestamp
        </if>

        <if test="sort == null or sort == ''">
            ORDER BY t.name,t.create_at DESC
        </if>

        <if test="sort != null">
            ORDER BY t.${sort}
            <if test="order != null">
                ${order}
            </if>
        </if>

        <if test="pageSize == -1 and offset >= -1">
            LIMIT ALL OFFSET 0
        </if>
        <if test="pageSize >= 1 and offset >= 0">
            LIMIT #{pageSize} OFFSET #{offset}
        </if>
    </select>
    <!--获取商品销售的总数量-->
    <select id="getProductSaleCountTotal" parameterType="java.lang.Long"  resultType="java.lang.Integer">
        select sum(sale_count) from sale_order_line where sale_product_id=#{value} and order_status='S' ;
    </select>
    <!--获取商品退货的总数量-->
    <select id="getProductBackCountTotal" parameterType="java.lang.Long"  resultType="java.lang.Integer">
        select sum(sale_count) from sale_order_line where sale_product_id=#{value} and order_status='T';
    </select>


    <sql id="saleOrderColumns">
        ${alias}.id,
        ${alias}.sale_at,
        ${alias}.order_id,
        ${alias}.discount_amount,
        ${alias}.sale_total,
        ${alias}.jd_fee_sum,
        ${alias}.product_cost_sum,
        ${alias}.ship_fee,
        ${alias}.pack_fee,
        ${alias}.storage_fee,
        ${alias}.postal_fee,
        ${alias}.profit,
        ${alias}.inte_logistics,
        ${alias}.create_at,
        ${alias}.update_at,
        ${alias}.inv_area,
        ${alias}.remark_status,
        ${alias}.remark,
        ${alias}.create_user_id,
        ${alias}.update_user_id,
        ${alias}.shop,
        ${alias}.input_type,
        ${alias}.order_status,
        ${alias}.fee_category_id
    </sql>
    <!-- 录入一条销售订单信息 -->
    <insert id="insertSaleOrder" parameterType="domain.sale.SaleOrder" useGeneratedKeys="true" keyProperty="id">
        insert into sale_order
        (sale_at,order_id,discount_amount,sale_total,product_cost_sum,
        jd_fee_sum,ship_fee,pack_fee,storage_fee,postal_fee,profit,inte_logistics,
        create_at,update_at,inv_area,remark_status,remark,create_user_id,update_user_id,shop,input_type,order_status,fee_category_id)
        values(
        #{saleAt},#{orderId},#{discountAmount},#{saleTotal},#{productCostSum},
        #{jdFeeSum},#{shipFee},#{packFee},#{storageFee},#{postalFee},#{profit},#{inteLogistics},
        CURRENT_TIMESTAMP(0),CURRENT_TIMESTAMP(0),#{invArea},#{remarkStatus},#{remark},#{createUserId},
        #{updateUserId},#{shop},#{inputType},#{orderStatus},#{feeCategoryId}
       )
    </insert>
    <update id="updateSaleOrder" parameterType="domain.sale.SaleOrder" >
        update sale_order set sale_at=#{saleAt},order_id=#{orderId},
        discount_amount=#{discountAmount},sale_total=#{saleTotal},jd_fee_sum=#{jdFeeSum},ship_fee=#{shipFee},product_cost_sum=#{productCostSum},
        pack_fee=#{packFee},storage_fee=#{storageFee},postal_fee=#{postalFee},profit=#{profit},inte_logistics=#{inteLogistics},
        update_at= CURRENT_TIMESTAMP(0),inv_area=#{invArea},remark_status=#{remarkStatus},remark=#{remark},
        update_user_id=#{updateUserId},shop=#{shop},input_type=#{inputType},order_status=#{orderStatus},fee_category_id=#{feeCategoryId}
        where id=#{id}
    </update>

    <select id="getSaleOrderById" parameterType="java.lang.Long"  resultType="domain.sale.SaleOrder">
        select
        <include refid="saleOrderColumns">
            <property name="alias" value="t"/>
        </include>
        from sale_order t where 1=1  and t.id=#{value}
    </select>

    <select id="getSaleOrder" parameterType="domain.sale.SaleOrder" resultType="domain.sale.SaleOrder">
        select
        <include refid="saleOrderColumns">
            <property name="alias" value="t"/>
        </include>
        from sale_order t where 1=1
        <if test="saleAt!=null and saleAt!=''">
            and t.sale_at = #{saleAt}
        </if>
        <if test="orderId != null and orderId!='' ">
            and t.order_id =#{orderId}
        </if>
        <if test="shop!=null and shop!=''">
            and t.shop = #{shop}
        </if>
        <if test="inputType!=null and inputType!=''">
            and t.input_type = #{inputType}
        </if>
        <if test="orderStatus!=null and orderStatus!=''">
            and t.order_status = #{orderStatus}
        </if>
        ORDER BY t.sale_at desc,t.create_at DESC
    </select>
    <select id="getSaleStatistics" parameterType="domain.sale.SaleOrder" resultType="domain.sale.SaleStatistics">
        SELECT sum(sale_total)as saleTotal,sum(jd_fee_sum)as jdFeeTotal ,sum(ship_fee)as shipFeeTotal,sum(inte_logistics)as inteLogisticsTotal ,
        sum(pack_fee)as packFeeTotal,sum(storage_fee)as storageFeeTotal ,sum(profit)as profitTotal, count(id) as saleCountTotal FROM sale_order
        where 1=1

        <if test="shop!=null and shop!=''">
            and shop = #{shop}
        </if>
        <if test="starttime!=null and starttime!=''">
            and sale_at &gt;=#{starttime} ::timestamp
        </if>
        <if test="endtime!=null and endtime!=''">
            and sale_at &lt;=#{endtime} ::timestamp
        </if>
        <if test="orderStatus!=null and orderStatus!=''">
            and order_status = #{orderStatus}
        </if>

        <!--<if test="categoryId!=null and categoryId!=''">-->
            <!--and category_id = #{categoryId}-->
        <!--</if>-->
        <!--<if test="productName != null and productName!='' ">-->
            <!--and product_name like '%${productName}%'-->
        <!--</if>-->
        ;
    </select>
    <select id="getSaleInventory" parameterType="domain.sale.SaleOrderLine" resultType="domain.sale.SaleInventory">
        SELECT sum(s.sale_count)as saleCount,s.sale_at as saleDate from sale_order_line s
        WHERE 1=1
        <if test="saleProductId!=null and saleProductId!=''">
            and sale_product_id =#{saleProductId}
        </if>
        and s.sale_at::TEXT LIKE '${saleMonth}%' GROUP BY s.sale_at order by s.sale_at;
   </select>

    <select id="getSaleOrderPage" parameterType="domain.sale.SaleOrder" resultType="domain.sale.SaleOrder">
        select
        <include refid="saleOrderColumns">
            <property name="alias" value="t"/>
        </include>
        from sale_order t where 1=1
        <if test="id != null">
            and t.id = #{id}
        </if>
        <if test="orderId != null and orderId!='' ">
            and t.order_id =#{orderId}
        </if>
        <if test="shop!=null and shop!=''">
            and t.shop = #{shop}
        </if>

        <if test="starttime!=null and starttime!=''">
            and t.sale_at &gt;=#{starttime} ::timestamp
        </if>
        <if test="endtime!=null and endtime!=''">
            and t.sale_at &lt;=#{endtime} ::timestamp
        </if>
        <if test="orderStatus!=null and orderStatus!=''">
            and t.order_status = #{orderStatus}
        </if>

        <if test="sort == null or sort == ''">
            ORDER BY t.sale_at desc,t.create_at DESC
        </if>

        <if test="sort != null">
            ORDER BY t.${sort}
            <if test="order != null">
                ${order}
            </if>
        </if>

        <if test="pageSize == -1 and offset >= -1">
            LIMIT ALL OFFSET 0
        </if>
        <if test="pageSize >= 1 and offset >= 0">
            LIMIT #{pageSize} OFFSET #{offset}
        </if>
    </select>

    <!--删除订单时子订单一起删除-->
    <delete id="delSaleOrderById" parameterType="java.lang.Long" >
        delete from sale_order  where id=#{value};
        delete from sale_order_line where sale_order_id=#{value};
    </delete>

    <delete id="delSaleProductById" parameterType="java.lang.Long" >
        delete from sale_product  where id=#{value}
    </delete>

    <sql id="saleOrderLineColumns">
        ${alias}.id,
        ${alias}.sale_order_id,
        ${alias}.sale_product_id,
        ${alias}.sale_count,
        ${alias}.jd_order_id,
        ${alias}.jd_sku_id,
        ${alias}.jd_price,
        ${alias}.sale_product_name,
        ${alias}.sale_product_cost,
        ${alias}.category_id,
        ${alias}.sale_at,
        ${alias}.jd_rate,
        ${alias}.jd_fee,
        ${alias}.order_status,
        ${alias}.discount_amount,
        ${alias}.postal_tax_rate,
        ${alias}.seq
    </sql>
    <!-- 录入一条销售子订单信息 -->
    <insert id="insertSaleOrderLine" parameterType="domain.sale.SaleOrderLine" useGeneratedKeys="true" keyProperty="id">
        insert into sale_order_line
        (sale_order_id,sale_product_id,sale_count,jd_order_id,jd_sku_id,jd_price,sale_product_name,sale_product_cost,category_id,sale_at,jd_rate,jd_fee,
        order_status,discount_amount,postal_tax_rate,seq)
        values(#{saleOrderId},#{saleProductId},#{saleCount},#{jdOrderId},#{jdSkuId},#{jdPrice},#{saleProductName},#{saleProductCost},#{categoryId},#{saleAt},#{jdRate},#{jdFee},
        #{orderStatus},#{discountAmount},#{postalTaxRate},#{seq})
    </insert>

    <update id="updateSaleOrderLine" parameterType="domain.sale.SaleOrderLine">
        update sale_order_line set sale_order_id=#{saleOrderId},sale_product_id=#{saleProductId},sale_count=#{saleCount},
        jd_order_id=#{jdOrderId},jd_sku_id=#{jdSkuId},jd_price=#{jdPrice},sale_product_name=#{saleProductName},
        sale_product_cost=#{saleProductCost},sale_at=#{saleAt},category_id=#{categoryId},jd_rate=#{jdRate},jd_fee=#{jdFee},order_status=#{orderStatus},
        discount_amount=#{discountAmount},postal_tax_rate=#{postalTaxRate},seq=#{seq}
        where id=#{id}
    </update>

    <select id="getSaleOrderLine" parameterType="domain.sale.SaleOrderLine" resultType="domain.sale.SaleOrderLine">
        select
        <include refid="saleOrderLineColumns">
            <property name="alias" value="t"/>
        </include>
        from sale_order_line t where 1=1
        <if test="id != null">
            and t.id = #{id}
        </if>
        <if test="saleOrderId != null and saleOrderId!='' ">
            and t.sale_order_id =#{saleOrderId}
        </if>
        <if test="saleProductId!=null and saleProductId!=''">
            and t.sale_product_id = #{saleProductId}
        </if>
        <if test="jdOrderId!=null and jdOrderId!=''">
            and t.jd_order_id = #{jdOrderId}
        </if>
        <if test="jdSkuId!=null and jdSkuId!=''">
            and t.jd_sku_id = #{jdSkuId}
        </if>
        <if test="orderStatus!=null and orderStatus!=''">
            and t.order_status = #{orderStatus}
        </if>
         order by seq asc
    </select>

    <delete id="delSaleOrderLineById" parameterType="java.lang.Long" >
        delete from sale_order_line  where id=#{value}
    </delete>


    <!--根据子订单数据获取订单数据-->
    <select id="getSaleOrderBySaleOrderLinePage" parameterType="domain.sale.SaleOrderLine" resultType="domain.sale.SaleOrder">
        select
        <include refid="saleOrderColumns">
            <property name="alias" value="t"/>
        </include>
        from sale_order t where 1=1
        <if test="shop!=null and shop!=''">
            and t.shop = #{shop}
        </if>
        <if test="starttime!=null and starttime!=''">
            and t.sale_at &gt;=#{starttime} ::timestamp
        </if>
        <if test="endtime!=null and endtime!=''">
            and t.sale_at &lt;=#{endtime} ::timestamp
        </if>

        and t.id in (select sale_order_id from sale_order_line l where 1=1
        <if test="id != null">
            and l.id = #{id}
        </if>
        <if test="saleOrderId != null and saleOrderId!='' ">
            and l.sale_order_id =#{saleOrderId}
        </if>
        <if test="saleProductId!=null and saleProductId!=''">
            and l.sale_product_id = #{saleProductId}
        </if>
        <if test="saleProductName != null and saleProductName!='' ">
            and l.sale_product_name like '%${saleProductName}%'
        </if>
        <if test="jdOrderId!=null and jdOrderId!=''">
            and l.jd_order_id = #{jdOrderId}
        </if>
        <if test="jdSkuId!=null and jdSkuId!=''">
            and l.jd_sku_id = #{jdSkuId}
        </if>
        <if test="orderStatus!=null and orderStatus!=''">
            and l.order_status = #{orderStatus}
        </if>
        )

        ORDER BY t.sale_at desc,t.create_at DESC

        <if test="pageSize == -1 and offset >= -1">
            LIMIT ALL OFFSET 0
        </if>
        <if test="pageSize >= 1 and offset >= 0">
            LIMIT #{pageSize} OFFSET #{offset}
        </if>
    </select>
    <!--根据saleProductId更新所有子订单的成本-->
    <update id="updateOrderLineCostByProId" parameterType="domain.sale.SaleOrderLine">
        update sale_order_line set sale_product_cost=#{saleProductCost}
        <if test="categoryId!=null and categoryId!=''">
        ,category_id=#{categoryId}
        </if>
        where sale_product_id = #{saleProductId}
    </update>

</mapper>
