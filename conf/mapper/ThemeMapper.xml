<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.ThemeMapper">

        <!--enable mybatis default cache configure reference:
            https://mybatis.github.io/mybatis-3/zh/sqlmap-xml.html#cache
        -->
        <!--<cache/>-->

        <sql id="sliderColumns">
                ${alias}.id,
                ${alias}.img,
                ${alias}.sort_nu,
                ${alias}.create_at,
                ${alias}.update_at,
                ${alias}.item_target,
                ${alias}.target_type,
                ${alias}.or_nav,
                ${alias}.nav_text
        </sql>

        <!---  滚动条    -->

        <select id="getSlidersAll" resultType="domain.Slider">
                select
                <include refid="sliderColumns">
                        <property name="alias" value="t"/>
                </include>
                from slider t order by t.sort_nu
        </select>

        <insert id="insertSlider" parameterType="domain.Slider" useGeneratedKeys="true" keyProperty="id">
                insert into slider (img,sort_nu,create_at,item_target,target_type)
                values (#{img},#{sortNu},CURRENT_TIMESTAMP(0),#{itemTarget}, #{targetType})
        </insert>

        <update id="updateSlider" parameterType="domain.Slider">
                update slider set
                img=#{img},sort_nu=#{sortNu},update_at=CURRENT_TIMESTAMP(0),item_target=#{itemTarget},target_type=#{targetType}
                where id = #{id}
        </update>

        <delete id="deleteSlider" parameterType="java.lang.Long">
                delete from slider
                where id = #{value}
        </delete>

        <!---  主题    -->

        <sql id="themeColumns">
                ${alias}.id,
                ${alias}.theme_img,
                ${alias}.sort_nu,
                ${alias}.or_destroy,
                ${alias}.destroy_at,
                ${alias}.update_at,
                ${alias}.master_item_id,
                ${alias}.create_at,
                ${alias}.theme_src_img,
                ${alias}.theme_config_info,
                ${alias}.theme_item,
                ${alias}.master_item_tag,
                ${alias}.title,
                ${alias}.theme_master_img,
                ${alias}.start_at,
                ${alias}.end_at,
                ${alias}.type,
                ${alias}.h5_link
        </sql>

        <select id="getThemePage" parameterType="domain.Theme" resultType="domain.Theme">
                select
                <include refid="themeColumns">
                        <property name="alias" value="t"/>
                </include>
                from themes t where 1=1
                <if test="id != null">
                        and t.id = #{id}
                </if>
                <if test="type != null and type != ''">
                        and t.type = #{type}
                </if>
                <if test="title != null and title != ''">
                        and t.title = #{title}
                </if>
                <if test="orDestroy != null">
                        and t.or_destroy = #{orDestroy}
                </if>
                <if test="startAt != null">
                        and t.start_at &gt;= #{startAt} ::timestamp
                </if>
                <if test="endAt != null">
                        and t.end_at &lt;= #{endAt} ::timestamp
                </if>

                <if test="sort == null or sort == ''">
                        ORDER BY t.create_at DESC, t.sort_nu
                </if>

                <if test="sort != null">
                        ORDER BY t.${sort}
                        <if test="order != null">
                                ${order}
                        </if>
                </if>

                <if test="pageSize == -1 and offset >= -1">
                        LIMIT ALL OFFSET 0
                </if>
                <if test="pageSize >= 1 and offset >= 0">
                        LIMIT #{pageSize} OFFSET #{offset}
                </if>
        </select>

        <select id="getThemesAll" resultType="domain.Theme">
                select
                <include refid="themeColumns">
                        <property name="alias" value="t"/>
                </include>
                from themes t where 1=1
        </select>

        <select id="getThemeById" resultType="domain.Theme" parameterType="java.lang.Long">
                select
                <include refid="themeColumns">
                        <property name="alias" value="t"/>
                </include>
                from themes t where id = #{value}

        </select>

        <insert id="insertTheme" parameterType="domain.Theme" useGeneratedKeys="true" keyProperty="id">
                insert into themes
                (master_item_id,title,start_at,end_at,theme_img,create_at,theme_item,master_item_tag,theme_master_img)
                values
                (#{masterItemId},#{title},#{startAt}::timestamp,#{endAt}::timestamp,#{themeImg},CURRENT_TIMESTAMP(0),#{themeItem}::jsonb,#{themeTags}::jsonb,#{themeMasterImg})
        </insert>

        <update id="updateTheme" parameterType="domain.Theme">
                update themes
                set title=#{title},start_at=#{startAt}::timestamp,end_at=#{endAt}::timestamp,theme_img=#{themeImg},
                    update_at=CURRENT_TIMESTAMP(0),theme_item=#{themeItem}::jsonb,master_item_tag=#{themeTags}::jsonb,theme_master_img=#{themeMasterImg},or_destroy=false
                where id = #{id}
        </update>

        <update id="updThemeItems" parameterType="domain.Theme">
                update themes
                set theme_item=#{themeItem}
                where id = #{id}
        </update>

        <insert id="addH5Theme" parameterType="domain.Theme">
                insert into themes (title,create_at,start_at,end_at,type,h5_link,theme_img)
                values(#{title},CURRENT_TIMESTAMP(0),#{startAt}::timestamp,#{endAt}::timestamp,#{type},#{h5Link},#{themeImg})
        </insert>
        <update id="updH5Theme" parameterType="domain.Theme">
                update themes
                set title=#{title},start_at=#{startAt}::timestamp,end_at=#{endAt}::timestamp,theme_img=#{themeImg},
                update_at=CURRENT_TIMESTAMP(0),h5_link = #{h5Link},or_destroy=false
                where id = #{id}
        </update>

        <update id="updDestroy">
                update themes set or_destroy = true
                where end_at &lt;= CURRENT_TIMESTAMP(0)
        </update>

        <update id="updThemeDestroy" parameterType="java.lang.Long">
                update themes
                set or_destroy = 'Y',update_at = CURRENT_TIMESTAMP(0),destroy_at = CURRENT_TIMESTAMP(0)
                where id = #{value}
        </update>

        <select id="getOnShelfTheme" resultType="domain.Theme">
              select
                <include refid="themeColumns">
                        <property name="alias" value="t"/>
                </include>
                from themes t where or_destroy = 'N' order by sort_nu DESC
        </select>
        <update id="updThemeSortNu" parameterType="java.util.List">
                <foreach collection="list" item="item" index="index" close="" open="" separator=";">
                        update themes
                        <set>
                                sort_nu = #{item.sortNu}
                        </set>
                        where id = #{item.id}
                </foreach>
        </update>


        <!---  主题模板    -->
        <sql id="templateColumns">
                ${alias}.id,
                ${alias}.url,
                ${alias}.navigator_html,
                ${alias}.content_html
        </sql>
        <select id="getTemplatesAll" resultType="domain.ThemeTemplate">
                select
                <include refid="templateColumns">
                        <property name="alias" value="t"/>
                </include>
                from theme_templates t where 1=1
        </select>

        <insert id="insertTemplate" parameterType="domain.ThemeTemplate" useGeneratedKeys="true" keyProperty="id">
                insert into theme_templates
                (url,navigator_html,content_html)
                values
                (#{url},#{navigatorHtml}::text,#{contentHtml}::text)
        </insert>

        <update id="updateTemplate" parameterType="domain.ThemeTemplate">
                update theme_templates
                set url = #{url},navigator_html = #{navigatorHtml}::text,content_html = #{contentHtml}::text
                where id = #{id}
        </update>
</mapper>
